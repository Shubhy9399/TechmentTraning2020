{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset1 Cambria Math;}{\f2\fnil\fcharset0 Cambria Math;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.18362}{\*\mmathPr\mmathFont1\mwrapIndent1440 }\viewkind4\uc1 
\pard\sa200\sl276\slmult1\ul\f0\fs52\lang9                               Ecllipse IDE \par
\ulnone\fs44 What is Eclipse?\fs22\par
In the context of computing, Eclipse is an integrated development environment (IDE) for developing applications using the Java programming language and other programming languages such as C/C++, Python, PERL, Ruby etc.\par
\par
The Eclipse platform which provides the foundation for the Eclipse IDE is composed of plug-ins and is designed to be extensible using additional plug-ins. Developed using Java, the Eclipse platform can be used to develop rich client applications, integrated development environments and other tools. Eclipse can be used as an IDE for any programming language for which a plug-in is available.\par
\par
The Java Development Tools (JDT) project provides a plug-in that allows Eclipse to be used as a Java IDE, PyDev is a plugin that allows Eclipse to be used as a Python IDE, C/C++ Development Tools (CDT) is a plug-in that allows Eclipse to be used for developing application using C/C++, the Eclipse Scala plug-in allows Eclipse to be used an IDE to develop Scala applications and PHPeclipse is a plug-in to eclipse that provides complete development tool for PHP.\par
\par
\fs48 Licensing\fs22\par
Eclipse platform and other plug-ins from the Eclipse foundation is released under the Eclipse Public License (EPL). EPL ensures that Eclipse is free to download and install. It also allows Eclipse to be modified and distributed.\par
\par
Eclipse Releases\par
Every year, since 2006, the Eclipse foundation releases the Eclipse Platform and a number of other plug-ins in June.\par
\par
Codename\tab Year\tab Platform Version\par
Callisto\tab 2006\tab 3.2\par
Europa\tab 2007\tab 3.3\par
Ganymede\tab 2008\tab 3.4\par
Galileo\tab 2009\tab 3.5\par
Helios\tab 2010\tab 3.6\par
Indigo\tab 2011\tab 3.7\par
Juno\tab 2012\tab 3.8 and 4.2\par
Kepler\tab 2013\tab 4.3\par
Luna\tab 2014\tab 4.4.0\par
\fs48 Downloading Eclipse\par
\fs22 You can download eclipse from {{\field{\*\fldinst{HYPERLINK http://www.eclipse.org/downloads/ }}{\fldrslt{http://www.eclipse.org/downloads/\ul0\cf0}}}}\f0\fs22 . The download page lists a number of flavors of eclipse.\par
\par
Download and Install Eclipse\par
The capabilities of each packaging of eclipse are different. Java developers typically use Eclipse Classic or Eclipse IDE for developing Java applications.\par
\par
The drop down box in the right corner of the download page allows you to set the operating system on which eclipse is to be installed. You can choose between Windows, Linux and Mac. Eclipse is packaged as a zip file.\par
\par
\fs48 Installing Eclipse\par
\fs22 To install on windows, you need a tool that can extract the contents of a zip file. For example you can use \f1\u8722?\f0\par
\par
7-zip\par
PeaZip\par
IZArc\par
Using any one of these tools, extract the contents of the eclipse zip file to any folder of your choice.\par
\par
Eclipse Zip File\par
Launching Eclipse\par
On the windows platform, if you extracted the contents of the zip file to c:\\, then you can start eclipse by using c:\\eclipse\\eclipse.exe\par
\par
When eclipse starts up for the first time it prompts you for the location of the workspace folder. All your data will be stored in the workspace folder. You can accept the default or choose a new location.\par
\par
Launching Eclipse\par
If you select "Use this as the default and do not ask again", this dialog box will not come up again. You can change this preference using the Workspaces Preference Page.\par
Parts\f2  \f0 of\f2  \f0 an\f2  \f0 Eclipse\f2  \f0 Window\par
The\f2  \f0 major\f2  \f0 visible\f2  \f0 parts\f2  \f0 of\f2  \f0 an\f2  \f0 eclipse\f2  \f0 window\f2  \f0 are\f2  \f1\u8722?\f0\par
\par
Views\par
Editors\f2  (\f0 all\f2  \f0 appear\f2  \f0 in\f2  \f0 one\f2  \f0 editor\f2  \f0 area\f2 )\f0\par
Menu\f2  \f0 Bar\par
Toolbar\par
An\f2  \f0 eclipse\f2  \f0 perspective\f2  \f0 is\f2  \f0 the\f2  \f0 name\f2  \f0 given\f2  \f0 to\f2  \f0 an\f2  \f0 initial\f2  \f0 collection\f2  \f0 and\f2  \f0 arrangement\f2  \f0 of\f2  \f0 views\f2  \f0 and\f2  \f0 an\f2  \f0 editor\f2  \f0 area\f2 . \f0 The\f2  \f0 default\f2  \f0 perspective\f2  \f0 is\f2  \f0 called\f2  \f0 java\f2 . \f0 An\f2  \f0 eclipse\f2  \f0 window\f2  \f0 can\f2  \f0 have\f2  \f0 multiple\f2  \f0 perspectives\f2  \f0 open\f2  \f0 in\f2  \f0 it\f2  \f0 but\f2  \f0 only\f2  \f0 one\f2  \f0 perspective\f2  \f0 can\f2  \f0 be\f2  \f0 active\f2  \f0 at\f2  \f0 any\f2  \f0 point\f2  \f0 of\f2  \f0 time\f2 . \f0 A\f2  \f0 user\f2  \f0 can\f2  \f0 switch\f2  \f0 between\f2  \f0 open\f2  \f0 perspectives\f2  \f0 or\f2  \f0 open\f2  \f0 a\f2  \f0 new\f2  \f0 perspective\f2 . \f0 A\f2  \f0 perspective\f2  \f0 controls\f2  \f0 what\f2  \f0 appears\f2  \f0 in\f2  \f0 some\f2  \f0 menus\f2  \f0 and\f2  \f0 tool\f2  \f0 bars\f2 .\f0\par
\par
\fs48 Parts\f2  \f0 of\f2  \f0 Eclipse\f2  \f0 Window\fs22\par
A\f2  \f0 perspective\f2  \f0 has\f2  \f0 only\f2  \f0 one\f2  \f0 editor\f2  \f0 area\f2  \f0 in\f2  \f0 which\f2  \f0 multiple\f2  \f0 editors\f2  \f0 can\f2  \f0 be\f2  \f0 open\f2 . \f0 The\f2  \f0 editor\f2  \f0 area\f2  \f0 is\f2  \f0 usually\f2  \f0 surrounded\f2  \f0 by\f2  \f0 multiple\f2  \f0 views\f2 . \f0 In\f2  \f0 general\f2 , \f0 editors\f2  \f0 are\f2  \f0 used\f2  \f0 to\f2  \f0 edit\f2  \f0 the\f2  \f0 project\f2  \f0 data\f2  \f0 and\f2  \f0 views\f2  \f0 are\f2  \f0 used\f2  \f0 to\f2  \f0 view\f2  \f0 the\f2  \f0 project\f2  \f0 metadata\f2 . \f0 For\f2  \f0 example\f2  \f0 the\f2  \f0 package\f2  \f0 explorer\f2  \f0 shows\f2  \f0 the\f2  \f0 java\f2  \f0 files\f2  \f0 in\f2  \f0 the\f2  \f0 project\f2  \f0 and\f2  \f0 the\f2  \f0 java\f2  \f0 editor\f2  \f0 is\f2  \f0 used\f2  \f0 to\f2  \f0 edit\f2  \f0 a\f2  \f0 java\f2  \f0 file\f2 .\f0\par
\par
The\f2  \f0 eclipse\f2  \f0 window\f2  \f0 can\f2  \f0 contain\f2  \f0 multiple\f2  \f0 editors\f2  \f0 and\f2  \f0 views\f2  \f0 but\f2  \f0 only\f2  \f0 one\f2  \f0 of\f2  \f0 them\f2  \f0 is\f2  \f0 active\f2  \f0 at\f2  \f0 any\f2  \f0 given\f2  \f0 point\f2  \f0 of\f2  \f0 time\f2 . \f0 The\f2  \f0 title\f2  \f0 bar\f2  \f0 of\f2  \f0 the\f2  \f0 active\f2  \f0 editor\f2  \f0 or\f2  \f0 view\f2  \f0 looks\f2  \f0 different\f2  \f0 from\f2  \f0 all\f2  \f0 the\f2  \f0 others\f2 .\f0\par
\par
The\f2  \f0 UI\f2  \f0 elements\f2  \f0 on\f2  \f0 the\f2  \f0 menu\f2  \f0 bar\f2  \f0 and\f2  \f0 tool\f2  \f0 bar\f2  \f0 represent\f2  \f0 commands\f2  \f0 that\f2  \f0 can\f2  \f0 be\f2  \f0 triggered\f2  \f0 by\f2  \f0 an\f2  \f0 end\f2  \f0 user\f2 .\f0\par
\par
Using\f2  \f0 Multiple\f2  \f0 Windows\par
Multiple\f2  \f0 Eclipse\f2  \f0 Windows\f2  \f0 can\f2  \f0 be\f2  \f0 open\f2  \f0 at\f2  \f0 the\f2  \f0 same\f2  \f0 time\f2 . \f0 To\f2  \f0 open\f2  \f0 a\f2  \f0 new\f2  \f0 window\f2 , \f0 click\f2  \f0 on\f2  \f0 the\f2  \f0 Windows\f2  \f0 menu\f2  \f0 and\f2  \f0 select\f2  \f0 the\f2  \f0 New\f2  \f0 Window\f2  \f0 menu\f2  \f0 item\f2 .\f0\par
\par
Each\f2  \f0 window\f2  \f0 can\f2  \f0 have\f2  \f0 a\f2  \f0 different\f2  \f0 perspective\f2  \f0 open\f2  \f0 in\f2  \f0 them\f2 . \f0 For\f2  \f0 example\f2  \f0 you\f2  \f0 could\f2  \f0 open\f2  \f0 two\f2  \f0 Eclipse\f2  \f0 windows\f2  \f0 one\f2  \f0 in\f2  \f0 the\f2  \f0 Java\f2  \f0 perspective\f2  \f0 and\f2  \f0 the\f2  \f0 other\f2  \f0 in\f2  \f0 the\f2  \f0 Debug\f2  \f0 perspective\f2 . \f0 The\f2  \f0 window\f2  \f0 showing\f2  \f0 the\f2  \f0 Java\f2  \f0 perspective\f2  \f0 can\f2  \f0 be\f2  \f0 used\f2  \f0 for\f2  \f0 editing\f2  \f0 the\f2  \f0 java\f2  \f0 code\f2  \f0 and\f2  \f0 the\f2  \f0 window\f2  \f0 showing\f2  \f0 the\f2  \f0 debug\f2  \f0 perspective\f2  \f0 can\f2  \f0 be\f2  \f0 used\f2  \f0 for\f2  \f0 debugging\f2  \f0 the\f2  \f0 application\f2  \f0 being\f2  \f0 developed\f2 .\par
\par
\fs48 Typical Eclipse Menus\par
\fs22 The typical menus available on the menu bar of an Eclipse window are \f1\u8722?\par
\par
File menu\par
Edit menu\par
Navigate menu\par
Search menu\par
Project menu\par
Run menu\par
Window menu\par
Help menu\par
Explore Menu\par
Plug-ins can add new menus and menu items. For example when the java editor is open you will see the Source menu and when the XML editor is open, you will see the Design menu.\par
\par
Brief Description of Menus\par
Sr.No\tab Menu Name & Description\par
1\tab\par
File\par
\par
The File menu allows you to open files for editing, close editors, save editor content and rename files. Among the other things, it also allows you to import and export workspace content and shutdown Eclipse.\par
\par
2\tab\par
Edit\par
\par
The Edit menu presents items like copy & paste.\par
\par
3\tab\par
Source\par
\par
The Source menu is visible only when a java editor is open. It presents a number of useful menu items related to editing java source code.\par
\par
4\tab\par
Navigate\par
\par
The Navigate menu allows you to quickly locate resources and navigate to them.\par
\par
5\tab\par
Search\par
\par
The Search menu presents items that allow you to search the workspace for files that contain specific data.\par
\par
6\tab\par
Project\par
\par
The menu items related to building a project can be found on the Project menu.\par
\par
7\tab\par
Run\par
\par
The menu items on the Run menu allow you to start a program in the run mode or debug mode. It also presents menu items that allow you to debug the code.\par
\par
8\tab\par
Window\par
\par
The Window menu allows you to open and close views and perspectives. It also allows you to bring up the Preferences dialog.\par
\par
9\tab\par
Help\par
\par
The Help menu can be used to bring up the Help window, Eclipse Marketplace view or Install new plug-ins. The about Eclipse menu item gives you version information.\par
\fs48 About Views\par
\fs22 Eclipse views allow users to see a graphical representation of project metadata. For example the project navigator view presents a graphical representation of the folders and files associated with a project and properties view presents a graphical representation of an element selected in another view or editor.\par
\par
An eclipse perspective can show any number of views and editors. All editor instances appear in a single editor area, whereas views are placed inside view folders. A workbench window can display any number of view folders. Each view folder can display one or more views.\par
\par
\b Organizing Views\par
\b0 The following picture shows four views arranged in a view folder.\par
\par
Organizing Views\par
The picture given below shows the same four views arranged in two view folders.\par
\par
Organizing View\par
\b Moving Views\par
\b0 To move a view from one view folder to another, just click on the view title and drag to the title bar area of another view folder. The green line shown below is a result of dragging the title bar of the Properties view from one view folder to the title bar area of another view folder. The Properties view can be moved to where the green line is by releasing the mouse button and sending out a drop event.\par
\par
Moving Views\par
\b Creating View Folders\par
\b0 View folders can be dynamically created by dragging the title bar of a view to anywhere outside the editor area and title bar of another view folder. As you drag the title bar around, green lines will indicate where exactly the new view folder will be created.\par
\par
Create View Folder\par
Moving the drag icon to the bottom of a window allows you to create a view folder that spans the entire width of the window. Moving the drag icon to the left or right edge of window allows you to create a view folder that spans the entire height of the window.\par
\par
\b Opening a view\par
\b0 To open a view, click on the Window menu and select the Show View menu item.\par
\par
\b Opening View\b0\par
Clicking on the Other menu item brings up the Show View dialog box that allows you to locate and activate a view.\par
\par
\b Show View\par
\b0 The views are organized by category. To quickly locate a view just type the name of a view into the filter text box. To open a view, select it and click on the OK button. The subsequent pages of this tutorial introduce you to a number of useful views.\par
\par
\fs48 What is a Perspective?\par
\fs22 An eclipse perspective is the name given to an initial collection and arrangement of views and an editor area. The default perspective is called java. An eclipse window can have multiple perspectives open in it but only one perspective is active at any point of time. A user can switch between open perspectives or open a new perspective. The active perspective controls what appears in some menus and tool bars.\par
\par
\b Opening a Perspective\par
\b0 To open a new perspective, click on the Windows menu and select Open Perspective \u8594? Other\b\par
\par
Perspective Open\par
\b0 The Open Perspective dialog box shows all the available perspectives. The same dialog can be brought up by clicking on the Open Perspective button (Perspective Button ) on the tool bar.\par
\par
\b Switching between Perspectives\b0\par
The most commonly used perspectives for java development are the Java perspective and Debug perspective. Users can switch between open perspectives by clicking on the Perspective name on the toolbar.\par
\par
\b Perspectives Toolbar\par
Closing a Perspective\par
\b0 To close a perspective, right click on the perspective name in toolbar and select the Close menu item.\par
\par
Perspectives Close\par
Customizing a Perspective\par
The customize perspective dialog can be used to customize a perspective. Customizing a perspective means \u8722?\par
\par
Determining the icons visible on the toolbar when a perspective is active.\par
Determining the menu items visible when a perspective is active.\par
Determine the menu items in New submenu, Show View submenu and Open Perspective submenu.\par
Perspectives Customize\par
The tab descriptions of customize perspective are given below \u8722?\par
\par
The Tool Bar Visibility tab can be used to determine which icons are visible on the toolbar when a perspective is open.\par
\par
The Menu Visibility tab can be used to determine which menu items are visible when a perspective is active.\par
\par
The Command Groups Availability tab can be used to control the visibility of toolbar icons and menu items.\par
\par
The Shortcuts tab can be used to determine the menu items in New submenu, Show View submenu and Open Perspective submenu.\par
\par
Based on the Shortcuts selection in the picture given below, to bring up the "New Java Project from Existing Ant Build File" wizard users have to bring up the New submenu (File \u8594? New), click on Other, expand the Java category and then select "Java Project from Existing Ant Build File". On the other hand, to start the New Class wizard they can bring up the New submenu (File \u8594? New) and select the Class menu item because its selected in the picture given below. By selecting the "Java Project from Existing Ant Build File" check box this item will also appear under the New menu.\par

\pard\sa200\sl276\slmult1\qc\par

\pard\sa200\sl276\slmult1\fs48 About Eclipse Workspace\par
\fs22 The eclipse workspace contains resources such as \u8722?\par
\par
Projects\par
Files\par
Folders\par
The workspace has a hierarchical structure. Projects are at the top level of the hierarchy and inside them you can have files and folders. Plug-ins use an API provided by the resources plug-in to manage the resources in the workspace.\par
\b\par
UI Elements for Managing the Workspace\par
\b0 Users use the functionality provided by views, editors and wizard to create and manage resources in the workspace. One among the many views that show the content of the workspace is the Project Explorer view.\par
\b\par
Package Explore\par
\b0 The File Wizard (File \u8594? New \u8594? File) can be used to create a new file.\par
\b\par
Create New File\par
\b0 The Folder Wizard (File \u8594? New \u8594? Folder) can be used to create a new folder.\par
\fs48 Creating the Java Project\par
\b\fs22 Opening the New Java Project wizard\par
\b0 The New Java Project wizard can be used to create a new java project. There are many ways to open this wizard \u8722?\par
\par
By clicking on the File menu and choosing New \u8594?Java Project.\par
\par
By right clicking anywhere in the Project Explorer and selecting New \u8594? Java Project.\par
\par
By clicking on the New button (New Button ) in the Tool bar and selecting Java Project.\par
\par
\b Using the New Java Project wizard\par
\b0 The New Java Project Wizard has two pages. On the first page \u8722?\par
\par
Enter the Project Name\par
\par
Select the Java Runtime Environment (JRE) or leave it at the default\par
\par
Select the Project Layout which determines whether there would be a separate folder for the source codes and class files. The recommended option is to create separate folders for sources and class files.\par
\b\par
New Java Project\par
\b0 You can click on the Finish button to create the project or click on the Next button to change the java build settings.\par
\par
On the second page you can change the Java Build Settings like setting the Project dependency (if there are multiple projects) and adding additional jar files to the build path.\par
\b\par
Viewing the Newly Created Project\par
\b0 The package explorer shows the newly created Java project. The icon that represents a Project is decorated with a J to show that it is a Java Project. The folder icon is decorated to show that it is a java source folder.\par
\par
\fs48 Create New Java Package\par
\b\fs22 Opening the New Java Package wizard\b0\par
You can use the New Java Package wizard to create a Java package. The Java Package wizard can be opened in different ways \u8722?\par
\par
By clicking on the File menu and selecting New \u8594? Package.\par
\par
By right click in the package explorer and selecting New \u8594? Package.\par
\par
By clicking on the package icon which is in the tool bar(Package Icon ).\par
\par
If you are creating a sub package, before opening the Java Package wizard select the parent package so that name field can have a default value in it.\par
\par
\b Using the New Java Package Wizard\b0\par
Once the Java Package wizard comes up \u8722?\par
\par
Enter/confirm the source folder name.\par
Enter the package name.\par
Click on the Finish button.\par
New Java Package\par
\b Viewing the Newly Created Package\par
\b0 The package explorer will show the newly created package under the source folder.\par
Opening the New Java Class Wizard\par
You can use the New Java Class wizard to create a Java class. The Java Class wizard can be invoked in different ways \u8722?\par
\par
By clicking on the File menu and selecting New \u8594? Class.\par
\par
By right clicking in the package explorer and selecting New \u8594? Class.\par
\par
By clicking on the class drop down button (Drop Down Button ) and selecting class ( Class Button).\par
\par
Before bringing up the New Java Class wizard, if possible, select the package in which the class is to be created so that the wizard can automatically fill in the package name for you.\par
\fs48 Create New Java Class\fs22\par
\b Using the New Java Class Wizard\par
\b0 Once the java class wizard comes up \u8722?\par
\par
Ensure the source folder and package are correct.\par
\par
Enter the class name.\par
\par
Select the appropriate class modifier.\par
\par
Enter the super class name or click on the Browse button to search for an existing class.\par
\par
Click on the Add button to select the interfaces implemented by this class.\par
\par
Examine and modify the check boxes related to method stubs and comments.\par
\par
Java Class\par
Click the Finish button.\par
\b\par
Viewing the Newly Created Java class\par
\b0 The newly created class should appear in the Package Explorer view and a java editor instance that allows you to modify the new class. It should appear in the editor area.\par
\f0\lang9\par
}
 